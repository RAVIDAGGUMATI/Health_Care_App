name: API Security Test

on:
  push:
    branches: [ "main" ]

jobs:
  zap-api-scan:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build FastAPI Docker image
      run: docker build -t fastapi-app .

    - name: Create Docker network
      run: docker network create zapnet

    - name: Run FastAPI container
      run: docker run -d --rm --name fastapi-app --network zapnet -p 8000:8000 fastapi-app

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Start FastAPI app
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      run: |
        uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
        curl http://localhost:8000/docs || exit 1

    - name: Run ZAP API scan
      run: |
        docker run --rm --network zapnet \
          -v $(pwd):/zap/wrk:rw \
          ghcr.io/zaproxy/zaproxy:stable \
          zap-api-scan.py -t http://fastapi-app:8000/openapi.json -f openapi -r zap_report.html

    - name: Upload ZAP report
      uses: actions/upload-artifact@v4
      with:
        name: zap-api-report
        path: zap_report.html
